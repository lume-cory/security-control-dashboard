import { Badge } from "@/subframe/components/Badge"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Textarea } from "@/components/ui/textarea"
import { Button } from "@/subframe/components/Button"
import { type Vulnerability } from "../data/vulnerability-data"
import { compliancePolicies, complianceFrameworks, securityTools } from "../data/vulnerability-data"
import { formatDistanceToNow } from "date-fns"

interface VulnerabilityDetailsProps {
    vulnerability: Vulnerability;
}

export function generateAISummary(vulnerability: Vulnerability): string {
    const status = vulnerability.status;
    const severity = vulnerability.severity;
    const policies = vulnerability.impactedPolicies.map(id => 
        compliancePolicies.find(p => p.id === id)?.name
    ).filter(Boolean).join(' and ');
    
    const teamOwner = vulnerability.teamOwner;
    const isApplicable = vulnerability.applicabilityAssessment.isApplicable;
    const justification = vulnerability.applicabilityAssessment.justification;
    const timeline = vulnerability.complianceImpact.nextSteps.timeline;

    let summary = `Found a ${severity.toLowerCase()} severity vulnerability that could impact ${vulnerability.affectedComponent} `;
    summary += `and is not aligned with ${policies} policies. `;

    // if (teamOwner === 'UNKNOWN') {
    //     summary += `The problem has not been fully identified because the owning team is unknown. Team assignment is required before remediation can begin. `;
    // } else {
        switch(status) {
            case 'FIXED':
                summary += `The issue has been fixed and is in staging, rolling out to production on ${timeline}. `;
                break;
            case 'NOT_APPLICABLE':
                summary += `The issue is likely not applicable because ${justification}. `;
                break;
            case 'IN_REVIEW':
                summary += `The fix is currently under review and will be deployed soon. `;
                break;
            case 'OPEN':
                summary += `The problem has been identified and is currently assigned to the ${teamOwner} team `;
                summary += `with a target completion date of ${timeline}. `;
                break;
            case 'IN_PROGRESS':
                summary += `The problem is currently being worked on by the ${teamOwner} team `;
                summary += `with a target completion date of ${timeline}. `;
                break;
            case 'ACCEPTED_RISK':
                summary += `The risk has been accepted by the business with compensating controls in place. `;
                break;
        }
    // }

    if (vulnerability.remediationDetails?.jiraTicket) {
        summary += `Tracking in JIRA ${vulnerability.remediationDetails.jiraTicket.id}. `;
    }

    return summary;
}

export function VulnerabilityDetails({ vulnerability }: VulnerabilityDetailsProps) {
    const getStatusBadgeVariant = (status: string) => {
        switch (status) {
            case 'OPEN': return 'error'
            case 'IN_REVIEW': return 'warning'
            case 'NOT_APPLICABLE': return 'neutral'
            case 'FIXED': return 'success'
            case 'ACCEPTED_RISK': return 'brand'
            default: return 'neutral'
        }
    }

    const getSeverityBadgeVariant = (severity: string) => {
        switch (severity) {
            case 'CRITICAL': return 'error'
            case 'HIGH': return 'error'
            case 'MEDIUM': return 'warning'
            case 'LOW': return 'success'
            default: return 'neutral'
        }
    }

    return (
        <div className="space-y-6">
            {/* AI Summary Section */}
            <div className="bg-blue-50 border border-blue-100 rounded-lg p-4">
                <div className="flex items-center gap-2 mb-2">
                    <span className="text-sm font-semibold text-blue-700">AI Summary</span>
                </div>
                <p className="text-sm text-blue-700">
                    {generateAISummary(vulnerability)}
                </p>
            </div>

            {/* Description Section */}
            {/* <div>
                <p className="text-muted-foreground">{vulnerability.description}</p>
            </div> */}

            {/* Detection Tools Section */}
            <div>
                <h3 className="text-lg font-semibold mb-3">Detection Tools</h3>
                <div className="space-y-4">
                    {vulnerability.toolOutputs.map((tool, index) => (
                        <Card key={index}>
                            <CardContent className="pt-6 space-y-4">
                                <div className="flex items-center justify-between">
                                    <div className="flex items-center gap-2">
                                        <h4 className="text-base font-semibold">{tool.toolName}</h4>
                                        <span className="text-sm text-muted-foreground">
                                            Detected {formatDistanceToNow(new Date(tool.detectionDate))} ago
                                        </span>
                                    </div>
                                </div>

                                <div>
                                    <p className="text-sm text-muted-foreground">{tool.summary}</p>
                                    <div className="mt-2 flex flex-wrap gap-2">
                                        <span className="inline-flex items-center px-2 py-1 rounded-full text-xs bg-gray-100">
                                            {tool.vulnerabilityType}
                                        </span>
                                        {tool.exploitability && (
                                            <span className="inline-flex items-center px-2 py-1 rounded-full text-xs bg-gray-100">
                                                Exploitability: {tool.exploitability}
                                            </span>
                                        )}
                                    </div>
                                </div>

                                {/* Add CVE References Section */}
                                {tool.cveRefs && tool.cveRefs.length > 0 && (
                                    <div className="space-y-3">
                                        <h4 className="text-sm font-semibold">Associated CVEs</h4>
                                        <div className="space-y-4">
                                            {tool.cveRefs.map((cve, i) => (
                                                <div key={i} className="p-3 bg-gray-50 rounded-lg space-y-2">
                                                    <div className="flex items-center justify-between">
                                                        <a 
                                                            href={cve.link}
                                                            target="_blank"
                                                            rel="noopener noreferrer"
                                                            className="text-sm text-blue-600 hover:underline font-medium"
                                                        >
                                                            {cve.id}
                                                        </a>
                                                        <div className="flex items-center gap-2">
                                                            <span className="text-xs text-muted-foreground">
                                                                Published: {new Date(cve.publishedDate).toLocaleDateString()}
                                                            </span>
                                                            <span className={`inline-flex items-center gap-1 px-2 py-1 bg-gray-100 rounded-full text-xs`}>
                                                                <div className={`w-2 h-2 rounded-full ${
                                                                    cve.cvssScore >= 9.0 ? 'bg-red-500' :
                                                                    cve.cvssScore >= 7.0 ? 'bg-orange-500' :
                                                                    cve.cvssScore >= 4.0 ? 'bg-yellow-500' :
                                                                    'bg-green-500'
                                                                }`} />
                                                                CVSS: {cve.cvssScore.toFixed(1)}
                                                            </span>
                                                        </div>
                                                    </div>
                                                    <p className="text-sm text-muted-foreground">{cve.summary}</p>
                                                    <div className="text-xs font-mono text-muted-foreground bg-gray-100 px-2 py-1 rounded">
                                                        {cve.cvssVector}
                                                    </div>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                )}

                                {tool.location && (
                                    <div>
                                        <h4 className="text-sm font-semibold mb-2">Location</h4>
                                        <div className="text-sm space-y-1">
                                            <p>Repository: {tool.location.repository}</p>
                                            {tool.location.filePath && <p>File: {tool.location.filePath}</p>}
                                            {tool.location.lineNumber && <p>Line: {tool.location.lineNumber}</p>}
                                            {tool.location.codeSnippet && (
                                                <pre className="mt-2 p-2 bg-muted rounded-md text-xs">
                                                    {tool.location.codeSnippet}
                                                </pre>
                                            )}
                                        </div>
                                    </div>
                                )}

                                {tool.recommendation && (
                                    <div>
                                        <h4 className="text-sm font-semibold mb-2">Recommendation</h4>
                                        <p className="text-sm text-muted-foreground">{tool.recommendation}</p>
                                    </div>
                                )}
                            </CardContent>
                        </Card>
                    ))}
                </div>
            </div>

            {/* Exposure Details Section */}
            <div>
                <h3 className="text-lg font-semibold mb-3">Exposure Details</h3>
                <Card>
                    <CardContent className="pt-6 space-y-4">

                        {/* Add Exposure Details */}
                        {vulnerability.exposureDetails && (
                            <div className="space-y-3">
                                <h4 className="text-sm font-semibold">Exposure Analysis</h4>
                                <div className="grid grid-cols-2 gap-4">
                                    <div>
                                        <p className="text-sm font-medium">Exposed Assets</p>
                                        <p className="text-sm text-muted-foreground">{vulnerability.exposureDetails.exposedAssets}</p>
                                    </div>
                                    <div>
                                        <p className="text-sm font-medium">Attack Vector</p>
                                        <p className="text-sm text-muted-foreground">{vulnerability.exposureDetails.attackVector}</p>
                                    </div>
                                    <div>
                                        <p className="text-sm font-medium">Attack Complexity</p>
                                        <span className="inline-flex items-center px-2 py-1 rounded-full text-xs bg-gray-100">
                                            {vulnerability.exposureDetails.attackComplexity}
                                        </span>
                                    </div>
                                    <div>
                                        <p className="text-sm font-medium">Privileges Required</p>
                                        <span className="inline-flex items-center px-2 py-1 rounded-full text-xs bg-gray-100">
                                            {vulnerability.exposureDetails.privilegesRequired}
                                        </span>
                                    </div>
                                </div>
                                
                                {vulnerability.exposureDetails.exposedData && (
                                    <div>
                                        <p className="text-sm font-medium mb-2">Exposed Data</p>
                                        <div className="flex flex-wrap gap-2">
                                            {vulnerability.exposureDetails.exposedData.map((data, index) => (
                                                <span key={index} className="inline-flex items-center px-2 py-1 rounded-full text-xs bg-red-100">
                                                    {data}
                                                </span>
                                            ))}
                                        </div>
                                    </div>
                                )}
                            </div>
                        )}

                        {/* Affected Assets */}
                        <h4 className="text-sm font-semibold">Affected Assets</h4>
                        <Table>
                            <TableHeader>
                                <TableRow>
                                    <TableHead>Asset</TableHead>
                                    <TableHead>Type</TableHead>
                                    <TableHead>Details</TableHead>
                                    <TableHead>Region</TableHead>
                                    <TableHead>Owner</TableHead>
                                    <TableHead>Team</TableHead>
                                    <TableHead>Platform</TableHead>
                                </TableRow>
                            </TableHeader>
                            <TableBody>
                                {vulnerability.exposureDetails?.affectedAssets?.map((asset, index) => (
                                    <TableRow key={index}>
                                        <TableCell className="font-medium">{asset.name}</TableCell>
                                        <TableCell>
                                            <span className="inline-flex items-center px-2 py-1 rounded-full text-xs bg-gray-100">
                                                {asset.resourceType}
                                            </span>
                                        </TableCell>
                                        <TableCell className="text-sm text-muted-foreground">
                                            {asset.details}
                                        </TableCell>
                                        <TableCell>{asset.region}</TableCell>
                                        <TableCell>{asset.owner}</TableCell>
                                        <TableCell>
                                                {asset.team}
                                        </TableCell>
                                        <TableCell>
                                            <div className="space-y-1">
                                                <div className="text-sm">{asset.platform.type}</div>
                                                {asset.platform.os && (
                                                    <div className="text-xs text-muted-foreground">
                                                        {asset.platform.os} {asset.platform.version}
                                                    </div>
                                                )}
                                            </div>
                                        </TableCell>
                                    </TableRow>
                                ))}
                            </TableBody>
                        </Table>

                        {/* Vulnerability References */}
                        {vulnerability.cveData && vulnerability.cveData.length > 0 && (
                            <div className="space-y-3">
                                <h4 className="text-sm font-semibold">Vulnerability References</h4>
                                {vulnerability.cveData.map((cve, index) => (
                                    <div key={index} className="space-y-2">
                                        <div className="flex items-center gap-2">
                                            <a 
                                                href={`https://nvd.nist.gov/vuln/detail/${cve.id}`}
                                                target="_blank"
                                                rel="noopener noreferrer"
                                                className="text-sm text-blue-600 hover:underline"
                                            >
                                                {cve.id}
                                            </a>
                                            <span className="inline-flex font-base items-center gap-1 px-2 py-1 rounded-full text-xs bg-gray-100">
                                                <div className={`w-2 h-2 rounded-full ${
                                                    cve.cvssSeverity === 'CRITICAL' ? 'bg-red-500' :
                                                    cve.cvssSeverity === 'HIGH' ? 'bg-orange-500' :
                                                    cve.cvssSeverity === 'MEDIUM' ? 'bg-yellow-500' :
                                                    'bg-green-500'
                                                }`} />
                                                {cve.cvssSeverity} ({cve.cvssScore.toString()})
                                            </span>
                                        </div>
                                        <p className="text-sm text-muted-foreground">{cve.summary}</p>
                                        <div className="text-xs text-muted-foreground">
                                            Published: {new Date(cve.publishDate).toLocaleDateString()}
                                        </div>
                                    </div>
                                ))}
                            </div>
                        )}

                        {/* Affected Libraries and Systems */}
                        {vulnerability.cveData && vulnerability.cveData.length > 0 && (
                            <div>
                                <h4 className="text-sm font-semibold mb-2">Affected Libraries and Systems</h4>
                                <div className="space-y-2">
                                    {vulnerability.cveData.map(cve => (
                                        cve.impactedSystems.map((system, index) => (
                                            <div key={index} className="flex items-center gap-2">
                                                <span className="inline-flex font-base items-center gap-1 px-2 py-1 rounded-full text-xs bg-gray-100">
                                                    {system.library}
                                                </span>
                                                <span className="text-sm">{system.name}</span>
                                                <span className="text-sm text-muted-foreground">v{system.version}</span>
                                            </div>
                                        ))
                                    ))}
                                </div>
                            </div>
                        )}

                        {/* OWASP Categories */}
                        {vulnerability.owaspCategories && vulnerability.owaspCategories.length > 0 && (
                            <div className="space-y-3">
                                <h4 className="text-sm font-semibold">OWASP Categories</h4>
                                {vulnerability.owaspCategories.map((category, index) => (
                                    <div key={index} className="space-y-2">
                                        <div className="text-sm font-medium">{category.id} - {category.name}</div>
                                        <p className="text-sm text-muted-foreground">{category.description}</p>
                                        <div className="space-y-2">
                                            <h5 className="text-sm font-medium">Example Attacks:</h5>
                                            <ul className="list-disc list-inside text-sm text-muted-foreground">
                                                {category.exampleAttacks.map((attack, i) => (
                                                    <li key={i}>{attack}</li>
                                                ))}
                                            </ul>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        )}
                    </CardContent>
                </Card>
            </div>

            {/* Applicability Assessment */}
            <div>
                <h3 className="text-lg font-semibold mb-3">Applicability Assessment</h3>
                <Card>
                    <CardContent className="pt-6 space-y-4">
                    {vulnerability.applicabilityAssessment ? (
                        <div className="space-y-6">
                            <div className="flex items-center gap-2">
                                <span className="text-sm font-medium">Status:</span>
                                <span className="inline-flex font-base items-center gap-1 px-2 py-1 rounded-full text-xs bg-gray-100">
                                    <div className={`w-2 h-2 rounded-full ${
                                        vulnerability.applicabilityAssessment.isApplicable ? 'bg-red-500' : 'bg-green-500'
                                    }`} />
                                    {vulnerability.applicabilityAssessment.isApplicable ? 'Applicable' : 'Not Applicable'}
                                </span>
                            </div>

                            {/* Overall Assessment */}
                            {vulnerability.applicabilityAssessment.justification && (
                                <div>
                                    <span className="text-sm font-medium">Overall Assessment:</span>
                                    <p className="mt-1 text-muted-foreground">
                                        {vulnerability.applicabilityAssessment.justification}
                                    </p>
                                </div>
                            )}

                            {/* System Analysis Table */}
                            <div className="space-y-2">
                                <h4 className="text-sm font-semibold">System Analysis</h4>
                                <Table>
                                    <TableHeader>
                                        <TableRow>
                                            <TableHead>System</TableHead>
                                            <TableHead>Status</TableHead>
                                            <TableHead>Reason</TableHead>
                                            <TableHead>Components</TableHead>
                                            <TableHead>Controls</TableHead>
                                        </TableRow>
                                    </TableHeader>
                                    <TableBody>
                                        {vulnerability.applicabilityAssessment.systemAnalysis.map((system, index) => (
                                            <TableRow key={index}>
                                                <TableCell>
                                                    <div className="space-y-1">
                                                        <div>{system.systemName}</div>
                                                        {system.buildFlags && (
                                                            <div className="text-xs text-muted-foreground">
                                                                Build Flags: {system.buildFlags.join(', ')}
                                                            </div>
                                                        )}
                                                    </div>
                                                </TableCell>
                                                <TableCell>
                                                    <span className="inline-flex font-base items-center gap-1.5 px-2 py-1 rounded-full text-xs bg-gray-100">
                                                        <div className={`w-2 h-2 rounded-full ${
                                                            system.isApplicable ? 'bg-red-500' : 'bg-green-500'
                                                        }`} />
                                                        {system.isApplicable ? 'Applicable' : 'Not Applicable'}
                                                    </span>
                                                </TableCell>
                                                <TableCell>
                                                    <div className="text-sm text-muted-foreground">
                                                        {system.reason}
                                                    </div>
                                                </TableCell>
                                                <TableCell>
                                                    <div className="flex flex-wrap gap-1">
                                                        {system.affectedComponents?.map((component, i) => (
                                                            <span key={i} className="inline-flex items-center px-2 py-1 rounded-full text-xs bg-gray-100">
                                                                {component}
                                                            </span>
                                                        ))}
                                                    </div>
                                                </TableCell>
                                                <TableCell>
                                                    <div className="flex flex-wrap gap-1">
                                                        {system.mitigatingControls?.map((control, i) => (
                                                            <span key={i} className="inline-flex items-center px-2 py-1 rounded-full text-xs bg-blue-100">
                                                                {control}
                                                            </span>
                                                        ))}
                                                    </div>
                                                </TableCell>
                                            </TableRow>
                                        ))}
                                    </TableBody>
                                </Table>
                            </div>
                            
                            <div className="text-sm text-muted-foreground">
                                Assessed by {vulnerability.applicabilityAssessment.assessedBy} on {
                                    new Date(vulnerability.applicabilityAssessment.assessedDate!).toLocaleDateString()
                                }
                            </div>
                        </div>
                    ) : (
                        <div className="space-y-4">
                            <p className="text-muted-foreground">No assessment has been made yet.</p>
                            <Textarea placeholder="Provide assessment justification..." />
                            <div className="flex gap-2">
                                <Button variant="brand-secondary">Mark as Not Applicable</Button>
                                <Button variant="brand-secondary">Mark as Applicable</Button>
                            </div>
                        </div>
                    )}
                </CardContent>
                </Card>
            </div>

            {/* Compliance Impact */}
            <div>
                <h3 className="text-lg font-semibold mb-3">Compliance Impact</h3>
                <Card>
                    <CardContent className="pt-6 space-y-6">
                    {vulnerability.impactedPolicies.map((policyId, index) => {
                        const policy = compliancePolicies.find(p => p.id === policyId)
                        if (!policy) return null

                        return (
                            <div key={policyId}>
                                <div className="space-y-2">
                                    <div className="flex items-center gap-2">
                                        <h4 className="text-sm font-semibold">{policy.name}</h4>
                                        <span className="inline-flex font-base items-center gap-1 px-2 py-1 rounded-full text-xs bg-gray-100">
                                            {policy.policyCode}
                                        </span>
                                        <a 
                                            href={policy.policyLink}
                                            target="_blank"
                                            rel="noopener noreferrer"
                                            className="text-sm text-blue-600 hover:underline"
                                            onClick={(e) => e.stopPropagation()}
                                        >
                                            View Policy
                                        </a>
                                    </div>
                                    <p className="text-sm text-muted-foreground mt-1">{policy.policyText}</p>
                                    <div className="space-y-2">
                                        <div className="flex flex-wrap gap-2">
                                            {policy.frameworks.map(framework => {
                                                const frameworkInfo = complianceFrameworks.find(f => f.id === framework.id)
                                                return frameworkInfo && (
                                                    <span key={framework.id} className="inline-flex font-base items-center gap-1 px-2 py-1 rounded-full text-xs bg-gray-100">
                                                        <div className={`w-2 h-2 rounded-full ${
                                                            'bg-green-500'
                                                        }`} />
                                                        {frameworkInfo.name}
                                                    </span>
                                                )
                                            })}
                                        </div>
                                    </div>
                                </div>
                                {index < vulnerability.impactedPolicies.length - 1 && (
                                    <div className="border-t my-6" />
                                )}
                            </div>
                        )
                    })}
                    </CardContent>
                </Card>
            </div>

            {/* Remediation */}
            <div>
                <h3 className="text-lg font-semibold mb-3">Remediation</h3>
                <Card>
                    <CardContent className="pt-6 space-y-4">
                        <div className="flex items-center gap-2">
                            <span className="inline-flex font-base items-center gap-1 px-2 py-1 rounded-full text-xs bg-gray-100">
                                <div className={`w-2 h-2 rounded-full ${
                                    vulnerability.status === 'OPEN' ? 'bg-red-500' :
                                    vulnerability.status === 'IN_REVIEW' ? 'bg-yellow-500' :
                                    vulnerability.status === 'NOT_APPLICABLE' ? 'bg-gray-500' :
                                    vulnerability.status === 'FIXED' ? 'bg-green-500' :
                                    'bg-blue-500'
                                }`} />
                                {vulnerability.status.replace('_', ' ')}
                            </span>
                            {vulnerability.remediationDetails?.jiraTicket && (
                                <a 
                                    href={vulnerability.remediationDetails.jiraTicket.url}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    className="text-sm text-blue-600 hover:underline inline-flex items-center gap-1"
                                >
                                    JIRA #{vulnerability.remediationDetails.jiraTicket.id}
                                    <span className="text-xs text-muted-foreground">({vulnerability.remediationDetails.jiraTicket.status})</span>
                                </a>
                            )}
                            {vulnerability.remediationDetails?.pullRequest && (
                                <a 
                                    href={vulnerability.remediationDetails.pullRequest.url}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    className="text-sm text-blue-600 hover:underline inline-flex items-center gap-1"
                                >
                                    PR #{vulnerability.remediationDetails.pullRequest.id}
                                    <span className="text-xs text-muted-foreground">({vulnerability.remediationDetails.pullRequest.status})</span>
                                </a>
                            )}
                        </div>

                        <div>
                            <p className="text-sm text-muted-foreground">{vulnerability.remediationPlan}</p>
                        </div>

                        <div>
                            <h4 className="text-sm font-semibold mb-2">Implementation Details</h4>
                            <div className="space-y-2">
                                <div className="grid grid-cols-2 gap-4">
                                    <div>
                                        <p className="text-sm font-medium">Owner</p>
                                        <a 
                                            href={`/teams/${vulnerability.teamOwner.toLowerCase()}`}
                                            className="text-sm text-blue-600 hover:underline"
                                        >
                                            {vulnerability.teamOwner} Team
                                        </a>
                                    </div>
                                    <div>
                                        <p className="text-sm font-medium">Target Date</p>
                                        <p className="text-sm text-muted-foreground">
                                            {vulnerability.complianceImpact.nextSteps.timeline}
                                        </p>
                                    </div>
                                </div>

                                <div>
                                    <p className="text-sm font-medium mb-1">Technical Steps</p>
                                    <ul className="space-y-2">
                                        {vulnerability.complianceImpact.nextSteps.technical.map((step, i) => (
                                            <li key={i} className="flex items-start gap-2">
                                                <span className="text-sm text-muted-foreground list-disc list-inside">
                                                    {step.step}
                                                </span>
                                                {step.aiAction && (
                                                    <Button
                                                        variant="brand-secondary"
                                                        size="small"
                                                        className="h-6 px-2 text-xs"
                                                        icon="FeatherSparkles"
                                                        onClick={() => {/* Handle AI action */}}
                                                    >
                                                            {step.aiAction}
                                                    </Button>
                                                )}
                                            </li>
                                        ))}
                                    </ul>
                                </div>

                                <div>
                                    <p className="text-sm font-medium mb-1">Process Changes</p>
                                    <ul className="space-y-2">
                                        {vulnerability.complianceImpact.nextSteps.process.map((step, i) => (
                                            <li key={i} className="flex items-start gap-2">
                                                <span className="text-sm text-muted-foreground list-disc list-inside">
                                                    {step.step}
                                                </span>
                                                {step.aiAction && (
                                                    <Button
                                                        variant="brand-secondary"
                                                        size="small"
                                                        className="h-6 px-2 text-xs"
                                                        icon="FeatherSparkles"
                                                        onClick={() => {/* Handle AI action */}}
                                                    >
                                                            {step.aiAction}
                                                    </Button>
                                                )}
                                            </li>
                                        ))}
                                    </ul>
                                </div>

                                <div>
                                    <p className="text-sm font-medium mb-1">Documentation Updates</p>
                                    <ul className="space-y-2">
                                        {vulnerability.complianceImpact.nextSteps.documentation.map((step, i) => (
                                            <li key={i} className="flex items-start gap-2">
                                                <span className="text-sm text-muted-foreground list-disc list-inside">
                                                    {step.step}
                                                </span>
                                                {step.aiAction && (
                                                    <Button
                                                        variant="brand-secondary"
                                                        size="small"
                                                        className="h-6 px-2 text-xs"
                                                        icon="FeatherSparkles"
                                                        onClick={() => {/* Handle AI action */}}
                                                    >
                                                        {step.aiAction}
                                                    </Button>
                                                )}
                                            </li>
                                        ))}
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </CardContent>
                </Card>
            </div>

            {/* Business Impact section */}
            <div>
                <h3 className="text-lg font-semibold mb-3">Business Impact</h3>
                <Card>
                    <CardContent className="pt-6 space-y-6">
                        <div className="grid grid-cols-2 gap-6">
                            {/* Financial Impact */}
                            <div className="space-y-2">
                                <h4 className="text-sm font-semibold flex items-center gap-2">
                                    Financial Impact
                                </h4>
                                <ul className="list-disc list-inside text-sm text-muted-foreground space-y-1">
                                    {vulnerability.businessImpact?.financial?.map((impact, i) => (
                                        <li key={i}>{impact}</li>
                                    ))}
                                </ul>
                            </div>

                            {/* Regulatory Impact */}
                            <div className="space-y-2">
                                <h4 className="text-sm font-semibold">Regulatory Impact</h4>
                                <ul className="list-disc list-inside text-sm text-muted-foreground space-y-1">
                                    {vulnerability.businessImpact?.regulatory?.map((impact, i) => (
                                        <li key={i}>{impact}</li>
                                    ))}
                                </ul>
                            </div>

                            {/* Operational Impact */}
                            <div className="space-y-2">
                                <h4 className="text-sm font-semibold">Operational Impact</h4>
                                <ul className="list-disc list-inside text-sm text-muted-foreground space-y-1">
                                    {vulnerability.businessImpact?.operational?.map((impact, i) => (
                                        <li key={i}>{impact}</li>
                                    ))}
                                </ul>
                            </div>

                            {/* Customer Impact */}
                            {vulnerability.businessImpact?.customer && vulnerability.businessImpact.customer.length > 0 && (
                                <div className="space-y-2">
                                    <h4 className="text-sm font-semibold">Customer Impact</h4>
                                    <ul className="list-disc list-inside text-sm text-muted-foreground space-y-1">
                                        {vulnerability.businessImpact?.customer?.map((impact, i) => (
                                            <li key={i}>{impact}</li>
                                        ))}
                                    </ul>
                                </div>
                            )}
                        </div>
                    </CardContent>
                </Card>
            </div>
        </div>
    )
} 